#!/bin/bash

set -euo pipefail

validationType=$1

if [[ "$validationType" == "" ]]
then
  echo No validation type was specified. This may not be the script you want to be executing.
  exit 1
fi

./scripts/build

currentDir=$(pwd)
testDir=/tmp/ML_Flex_Lite_Test_CL
outputDir=$currentDir/TestOutput/classification

rm -rf $testDir
mkdir -p $testDir

cp -r shinylearner.jar $testDir/
mkdir $testDir/lib
cp -r lib/* $testDir/lib/
cp -r scripts $testDir/
cp -r AlgorithmScripts $testDir/
cp -r UserScripts $testDir/

mkdir -p $outputDir
rm -f $outputDir/${validationType}*

cd $testDir

validation=StrongSignal_Both
#validation=StrongSignalLarge_Both
dataFile=$currentDir/Validation/${validation}.tsv.gz
#classifAlgo="$currentDir/AlgorithmScripts/Classification/*/*/*/default"
classifAlgo=$currentDir/AlgorithmScripts/Classification/tsv/sklearn/lda/default
#classifAlgo=$currentDir/AlgorithmScripts/Classification/tsv/mlr/svm/default
#classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/mlr/*/default"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/sklearn/l*/default"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/arff/weka/bagging/default"
#debug=true
debug=false
outPredictionsFile=$outputDir/${validationType}_${validation}_Predictions.tsv
outMetricsFile=$outputDir/${validationType}_${validation}_Metrics.tsv
outBenchmarkFile=$outputDir/${validationType}_${validation}_Benchmark.tsv
outLogFile=$outputDir/${validationType}_${validation}.log

if [[ "$validationType" == "montecarlo" ]]
then
  UserScripts/classification_${validationType} "$dataFile" "$validation" 2 $debug "$classifAlgo" "$outPredictionsFile" "$outMetricsFile" "$outBenchmarkFile" "$outLogFile"
else
  UserScripts/classification_${validationType} "$dataFile" "$validation" 2 2 $debug "$classifAlgo" "$outPredictionsFile" "$outMetricsFile" "$outBenchmarkFile" "$outLogFile"
fi
