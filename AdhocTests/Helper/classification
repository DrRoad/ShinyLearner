#!/bin/bash

set -euo pipefail

validationType=$1

if [[ "$validationType" == "" ]]
then
  echo No validation type was specified. This may not be the script you want to be executing.
  exit 1
fi

./scripts/build

currentDir=$(pwd)
testDir=/tmp/ML_Flex_Lite_Test_CL
outputDir=$currentDir/TestOutput/classification/$validationType

rm -rf $testDir
mkdir -p $testDir

cp -r shinylearner.jar $testDir/
cp -r scripts $testDir/
cp -r AlgorithmScripts $testDir/
cp -r UserScripts $testDir/
cp -r VERSION $testDir/

rm -rf $outputDir
mkdir -p $outputDir

cd $testDir

validation=StrongSignal_Both
#validation=StrongSignal_Both_2Class
#validation=StrongSignalLarge_Both
#validation=StrongSignal_Continuous
#validation=NoSignal_Both
#dataFile="/tmp/ml_data/breast.cancer.arff"
dataFile="$currentDir/Data/GSE10320*"
#dataFile=$currentDir/Validation/${validation}.tsv.gz
#classifAlgo="$currentDir/AlgorithmScripts/Classification/*/*/*/default"
#classifAlgo=$currentDir/AlgorithmScripts/Classification/tsv/sklearn/lda/default
#classifAlgo=$currentDir/AlgorithmScripts/Classification/tsv/sklearn/adaboost/default
#classifAlgo=$currentDir/AlgorithmScripts/Classification/tsv/sklearn/*/default
#classifAlgo=$currentDir/AlgorithmScripts/Classification/arff/weka/*/default
#classifAlgo=$currentDir/AlgorithmScripts/Classification/tsv/mlr/svm/default
#classifAlgo=$currentDir/AlgorithmScripts/Classification/tsv/mlr/svm/default,$currentDir/AlgorithmScripts/Classification/arff/weka/LibSVM/default,$currentDir/AlgorithmScripts/Classification/tsv/sklearn/svm/default
classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/mlr/*/default"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/sklearn/l*/default"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/arff/weka/bagging/default"
verbose=true
#verbose=false
tmpDir=/Users/srp33/Downloads/Temp

if [[ "$validationType" == "montecarlo" ]]
then
  UserScripts/classification_${validationType} --data "$dataFile" --description "$validation" --iterations 2 --verbose "$verbose" --classif-algo "$classifAlgo" --output-dir "$outputDir" --temp-dir $tmpDir
else
  UserScripts/classification_${validationType} --data "$dataFile" --description "$validation" --iterations 2 --folds 2 --verbose "$verbose" --classif-algo "$classifAlgo" --output-dir "$outputDir"
fi
