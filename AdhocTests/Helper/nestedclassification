#!/bin/bash

set -euo pipefail

validationType=$1

if [[ "$validationType" == "" ]]
then
  echo No validation type was specified. This may not be the script you want to be executing.
  exit 1
fi

./scripts/build

currentDir=$(pwd)
testDir=/tmp/ML_Flex_Lite_Test_NestedCL
outputDir=$currentDir/TestOutput/nestedclassification/$validationType

rm -rf $testDir
mkdir -p $testDir

cp -r shinylearner.jar $testDir/
cp -r scripts $testDir/
cp -r AlgorithmScripts $testDir/
cp -r UserScripts $testDir/
cp -r VERSION $testDir/

rm -rf $outputDir
mkdir -p $outputDir

cd $testDir

validation=StrongSignal_Both
dataFile=$currentDir/Validation/${validation}.tsv.gz
#dataFile="$currentDir/debug_data/*.tsv.gz"
#dataFile="$currentDir/TestFiles/*.tsv.gz"
#dataFile="$currentDir/debug_data/Archive/mrna-sc_stad.tsv.gz,$currentDir/debug_data/stad_cv_surv1_stad.tsv.gz"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/*/*/*/default*"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/sklearn/l*/default*"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/sklearn/lda"
classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/sklearn/lda/default*"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/sklearn/l*"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/sklearn/decision_tree/default*"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/sklearn/l*,$currentDir/AlgorithmScripts/Classification/tsv/sklearn/svm"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/sklearn/svm"
#classifAlgo="$currentDir/AlgorithmScripts/Classification/tsv/sklearn/knn/default*"
verbose=true
#verbose=false

if [[ "$validationType" == "montecarlo" ]]
then
  #UserScripts/nestedclassification_${validationType} --data "$dataFile" --description $validation --outer-iterations 1 --inner-iterations 1 --verbose $verbose --classif-algo "$classifAlgo" --output-dir "$outputDir"
  UserScripts/nestedclassification_${validationType} --data "$dataFile" --description $validation --outer-iterations 2 --inner-iterations 2 --verbose $verbose --classif-algo "$classifAlgo" --output-dir "$outputDir"
else
  #UserScripts/nestedclassification_${validationType} --data "$dataFile" --description $validation --iterations 1 --inner-folds 2 --outer-folds 2 --verbose $verbose --classif-algo "$classifAlgo" --output-dir "$outputDir"
  UserScripts/nestedclassification_${validationType} --data "$dataFile" --description $validation --iterations 2 --inner-folds 2 --outer-folds 2 --verbose $verbose --classif-algo "$classifAlgo" --output-dir "$outputDir"
fi
