#!/bin/bash

set -euo pipefail

verbose="--verbose true"
#verbose="--verbose false"
currentDir=$(pwd)
overallLogFile=log.overall
tmpDir=/tmp/build_local_docker
version=$(cat VERSION)

rm -rf $tmpDir
mkdir -p $tmpDir/input $tmpDir/output

scripts/build
tar -zcf ShinyLearner.tar.gz shinylearner.jar scripts AlgorithmScripts README.md VERSION LICENSE UserScripts

mv ShinyLearner.tar.gz $tmpDir/
cp Dockerfile $tmpDir/
cp -r Validation/*.gz $tmpDir/input
cp -r BuildTests/* $tmpDir/

cd $tmpDir

sudo docker build -t srp33/shinylearner:version${version} .
#exit

#########################################################
# Test all classification algorithms using monte carlo
#########################################################

classifAlgo="AlgorithmScripts/Classification/*/*/*/default*"
#classifAlgo="AlgorithmScripts/Classification/tsv/*/*/default*"
#classifAlgo="AlgorithmScripts/Classification/tsv/demo*/*/default*"
#classifAlgo="AlgorithmScripts/Classification/tsv/sklearn/*/default*"
#classifAlgo="AlgorithmScripts/Classification/tsv/sklearn/svm/default*"
#classifAlgo="AlgorithmScripts/Classification/tsv/mlr/*/default*"
#classifAlgo="AlgorithmScripts/Classification/tsv/mlr/h2o*/default*"
#classifAlgo="AlgorithmScripts/Classification/tsv/mlr/svm/default*"
#classifAlgo="AlgorithmScripts/Classification/tsv/mlr/xgboost/default*"
#classifAlgo="AlgorithmScripts/Classification/arff/weka/*/default*"
#classifAlgo="AlgorithmScripts/Classification/arff/weka/ZeroR/default*"

##bash classification $version StrongSignal_Both montecarlo "--iterations 1" "$classifAlgo" "--verbose false" 1.log
##bash classification $version NoSignal_Both montecarlo "--iterations 1" "$classifAlgo" "--verbose false" 2.log
##bash classification $version StrongSignal_Both_2Class montecarlo "--iterations 1" "$classifAlgo" "--verbose false" 3.log
##bash classification $version NoSignal_Both_2Class montecarlo "--iterations 1" "$classifAlgo" "--verbose false" 4.log

bash classification $version StrongSignal_Both montecarlo "--iterations 3" "$classifAlgo" "$verbose" 1.log &
bash classification $version NoSignal_Both montecarlo "--iterations 3" "$classifAlgo" "$verbose" 2.log &
bash classification $version StrongSignal_Both_2Class montecarlo "--iterations 3" "$classifAlgo" "$verbose" 3.log &
bash classification $version NoSignal_Both_2Class montecarlo "--iterations 3" "$classifAlgo" "$verbose" 4.log &
wait

cat output/*.log >> $overallLogFile
rm -f output/*.log
python3 CheckLogFiles.py $overallLogFile 1

#########################################################
# Test all fs algorithms using monte carlo
#########################################################

fsAlgo="AlgorithmScripts/FeatureSelection/*/*/*/default*"
#fsAlgo="AlgorithmScripts/FeatureSelection/*/weka/*/default*"

bash featureselection $version StrongSignal_Both montecarlo "--iterations 3" "$fsAlgo" "$verbose" 1.log &
bash featureselection $version NoSignal_Both montecarlo "--iterations 3" "$fsAlgo" "$verbose" 2.log &
##bash featureselection $version StrongSignal_Both_2Class montecarlo "--iterations 3" "$fsAlgo" "$verbose" 3.log &
##bash featureselection $version NoSignal_Both_2Class montecarlo "--iterations 3" "$fsAlgo" "$verbose" 4.log &
wait

cat output/*.log >> $overallLogFile
rm -f output/*.log
python3 CheckLogFiles.py $overallLogFile 1

#########################################################
# Test some fs and cl algorithms using k-fold
#########################################################

fsAlgo="AlgorithmScripts/FeatureSelection/tsv/sklearn/r*/default*"
classifAlgo="AlgorithmScripts/Classification/tsv/sklearn/s*/default*"

bash classification $version StrongSignal_Both crossvalidation "--iterations 1 --folds 3" "$classifAlgo" "$verbose" 1.log &
bash classification $version NoSignal_Both crossvalidation "--iterations 1 --folds 3" "$classifAlgo" "$verbose" 2.log &
bash featureselection $version StrongSignal_Both crossvalidation "--iterations 1 --folds 3" "$fsAlgo" "$verbose" 3.log &
bash featureselection $version NoSignal_Both crossvalidation "--iterations 1 --folds 3" "$fsAlgo" "$verbose" 4.log &
wait

cat output/*.log >> $overallLogFile
rm -f output/*.log
python3 CheckLogFiles.py $overallLogFile 1

#########################################################
# Test nestedclassification
#########################################################

classifAlgo="AlgorithmScripts/Classification/tsv/sklearn/s*/default*"

bash nestedclassification $version StrongSignal_Both montecarlo "--inner-iterations 2 --outer-iterations 2" "$classifAlgo" "$verbose" 1.log &
bash nestedclassification $version NoSignal_Both montecarlo "--inner-iterations 2 --outer-iterations 2" "$classifAlgo" "$verbose" 2.log &
bash nestedclassification $version StrongSignal_Both crossvalidation "--iterations 2 --inner-folds 2 --outer-folds 2" "$classifAlgo" "$verbose" 3.log &
bash nestedclassification $version NoSignal_Both crossvalidation "--iterations 2 --inner-folds 2 --outer-folds 2" "$classifAlgo" "$verbose" 4.log &
wait

cat output/*.log >> $overallLogFile
rm -f output/*.log
python3 CheckLogFiles.py $overallLogFile 1

#########################################################
# Test nestedboth
#########################################################

fsAlgo="AlgorithmScripts/FeatureSelection/tsv/sklearn/r*/default*"
numFeaturesOptions="10,20"
classifAlgo="AlgorithmScripts/Classification/tsv/sklearn/s*/default*"

##fsAlgo="AlgorithmScripts/FeatureSelection/tsv/sklearn/mutual_info/default*"
##classifAlgo="AlgorithmScripts/Classification/tsv/sklearn/lda/default*"
bash nestedboth $version StrongSignal_Both montecarlo "--inner-iterations 2 --outer-iterations 2" "$fsAlgo" "$numFeaturesOptions" "$classifAlgo" "$verbose" 1.log &
bash nestedboth $version NoSignal_Both montecarlo "--inner-iterations 2 --outer-iterations 2" "$fsAlgo" "$numFeaturesOptions" "$classifAlgo" "$verbose" 2.log &
bash nestedboth $version StrongSignal_Both crossvalidation "--iterations 2 --inner-folds 2 --outer-folds 2" "$fsAlgo" "$numFeaturesOptions" "$classifAlgo" "$verbose" 3.log &
bash nestedboth $version NoSignal_Both crossvalidation "--iterations 2 --inner-folds 2 --outer-folds 2" "$fsAlgo" "$numFeaturesOptions" "$classifAlgo" "$verbose" 4.log &
wait

cat output/*.log >> $overallLogFile
rm -f output/*.log
python3 CheckLogFiles.py $overallLogFile 1

#########################################################
# Test special cases
#########################################################

bash special_cases $version "$verbose" 1.log

cat output/*.log >> $overallLogFile
rm -f output/*.log
python3 CheckLogFiles.py $overallLogFile 1

#########################################################
# Cleanup
#########################################################

cd $currentDir
sudo rm -rf $tmpDir
echo "All tests passed!!!"
