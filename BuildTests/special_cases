#!/bin/bash

set -euo pipefail

inputDir=$1
outputDir=$2
debug=$3
outLogFile=$4

validationType=montecarlo
numIterations=1
classifAlgo="AlgorithmScripts/Classification/tsv/mlr/svm/default"

mkdir -p /tmp/special_log

function testMultipleInputFiles {
  signal=$1

  description=${signal}SignalMultipleDataFiles
  dataFiles="$inputDir/${signal}Signal_Continuous_NoClass.tsv.gz,$inputDir/${signal}Signal_Discrete.tsv.gz"
  outPrefix=$outputDir/$(basename $0)_${description}_${validationType}

  UserScripts/classification_${validationType} "$dataFiles" $description $numIterations $debug "$classifAlgo" ${outPrefix}_Predictions.tsv ${outPrefix}_Metrics.tsv /dev/null /tmp/special_log/$description
  python BuildTests/CheckAccuracy.py classification $validationType $description "$classifAlgo" "${outPrefix}_Metrics.tsv" Algorithm 2>&1 | tee -a /tmp/special_log/$description
}

testMultipleInputFiles Strong
testMultipleInputFiles No

#####################################
# Checks for missing value scenarios
#####################################

# Make sure we get a warning when instance is missing class value
python BuildTests/KeepAllButLastLine.py $inputDir/StrongSignal_Class.tsv.gz /tmp/StrongSignal_Class.tsv.gz

description=StrongSignal_MissingDependentVariable
dataFiles="$inputDir/StrongSignal_Continuous_NoClass.tsv.gz,/tmp/StrongSignal_Class.tsv.gz"
outPrefix=$outputDir/$(basename $0)_${description}_${validationType}

UserScripts/classification_${validationType} "$dataFiles" $description $numIterations $debug "$classifAlgo" ${outPrefix}_Predictions.tsv ${outPrefix}_Metrics.tsv /dev/null /tmp/special_log/$description
python BuildTests/CheckAccuracy.py classification $validationType $description "$classifAlgo" "${outPrefix}_Metrics.tsv" Algorithm 2>&1 | tee -a /tmp/special_log/$description
python BuildTests/CheckLogForMessage.py /tmp/special_log/$description "After filtering, data were available for 59 instances and 101 data points" 2>&1 | tee -a /tmp/special_log/$description

# Make sure we get a warning when instance has class value but no data
python BuildTests/KeepAllButLastLine.py $inputDir/StrongSignal_Continuous_NoClass.tsv.gz /tmp/StrongSignal_Continuous_NoClass.tsv.gz

description=StrongSignal_MissingIndependentVariable
dataFiles="/tmp/StrongSignal_Continuous_NoClass.tsv.gz,$inputDir/StrongSignal_Class.tsv.gz"
outPrefix=$outputDir/$(basename $0)_${description}_${validationType}

UserScripts/classification_${validationType} "$dataFiles" $description $numIterations $debug "$classifAlgo" ${outPrefix}_Predictions.tsv ${outPrefix}_Metrics.tsv /dev/null /tmp/special_log/$description
python BuildTests/CheckAccuracy.py classification $validationType $description "$classifAlgo" "${outPrefix}_Metrics.tsv" Algorithm 2>&1 | tee -a /tmp/special_log/$description
python BuildTests/CheckLogForMessage.py /tmp/special_log/$description "After filtering, data were available for 59 instances and 101 data points" 2>&1 | tee -a /tmp/special_log/$description

#####################################
# Test different file formats
#####################################

description=StrongSignal_arff
dataFiles="$inputDir/StrongSignal_Both.arff.gz"
outPrefix=$outputDir/$(basename $0)_${description}_${validationType}

UserScripts/classification_${validationType} "$dataFiles" $description $numIterations $debug "$classifAlgo" ${outPrefix}_Predictions.tsv ${outPrefix}_Metrics.tsv /dev/null /tmp/special_log/$description
python BuildTests/CheckAccuracy.py classification $validationType $description "$classifAlgo" "${outPrefix}_Metrics.tsv" Algorithm 2>&1 | tee -a /tmp/special_log/$description

description=StrongSignal_ttsv
dataFiles="$inputDir/StrongSignal_Both.ttsv.gz"
outPrefix=$outputDir/$(basename $0)_${description}_${validationType}

UserScripts/classification_${validationType} "$dataFiles" $description $numIterations $debug "$classifAlgo" ${outPrefix}_Predictions.tsv ${outPrefix}_Metrics.tsv /dev/null /tmp/special_log/$description
python BuildTests/CheckAccuracy.py classification $validationType $description "$classifAlgo" "${outPrefix}_Metrics.tsv" Algorithm 2>&1 | tee -a /tmp/special_log/$description

rm -f /tmp/StrongSignal*

cat /tmp/special_log/* >> $outLogFile
rm -rf /tmp/special_log
