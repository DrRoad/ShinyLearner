#!/bin/bash

set -euo pipefail

source scripts/shared_functions
source scripts/first_param_check

dataFiles="$(python scripts/ParseArgs.py --data TRUE "$@")"
description="$(python scripts/ParseArgs.py --description TRUE $@)"
numIterations="$(python scripts/ParseArgs.py --iterations TRUE $@)"
classifAlgos="$(python scripts/ParseArgs.py --classif-algo TRUE "$@")"
outputDir="$(python scripts/ParseArgs.py --output-dir TRUE $@)"
verbose="$(python scripts/ParseArgs.py --verbose FALSE false $@)"
ohe="$(python scripts/ParseArgs.py --ohe FALSE true $@)"
tmpDir="$(python scripts/ParseArgs.py --temp-dir FALSE '' $@)"

checkParamParseOutput "$dataFiles"
checkParamParseOutput "$description"
checkParamParseOutput "$numIterations"
checkParamParseOutput "$classifAlgos"
checkParamParseOutput "$outputDir"
checkParamParseOutput "$verbose"
checkParamParseOutput "$ohe"
checkParamParseOutput "$tmpDir"

mkdir -p $outputDir
outPredictionsFile="$outputDir/Predictions.tsv"
outMetricsFile="$outputDir/Metrics.tsv"
outBenchmarkFile="$outputDir/ElapsedTime.tsv"
outLogFile="$outputDir/Log.txt"

source scripts/print_args

function cleanup {
  rm -rf $tmpDir
}

cleanup
tmpDir="$(getTempDir "$tmpDir")"

trap cleanup INT TERM EXIT

scripts/classification "$dataFiles" "$description" "$numIterations" "$verbose" "$classifAlgos" "$outPredictionsFile" "$outMetricsFile" "$outBenchmarkFile" montecarlo 1 $ohe "$tmpDir" 2>&1 | tee -a "$outLogFile"

cleanup

source scripts/success_message
