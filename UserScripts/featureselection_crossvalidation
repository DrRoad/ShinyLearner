#!/bin/bash

set -euo pipefail

source scripts/first_param_check

dataFiles="$1"
description="$2"
numIterations="$3"
numFolds="$4"
debug="$5"
fsAlgos="$6"
outFeaturesFile="$7"
outSummarizedFeaturesFile="$8"
outBenchmarkFile="$9"
outLogFile="${10}"

tmpDir=$(mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir')

function cleanup_cv {
  rm -rf $tmpDir
}

cleanup_cv

if [[ "$outLogFile" == "" ]]
then
  echo An output log file must be specified.
  exit 1
fi

source scripts/print_args

for iteration in $(seq 1 $numIterations)
do
  outDir=$tmpDir/$iteration
  mkdir -p $outDir

  if [[ "$outFeaturesFile" == "" ]]
  then
    outFeaturesFileIteration=
  else
    outFeaturesFileIteration=$outDir/outfeatures
  fi
  if [[ "$outBenchmarkFile" == "" ]]
  then
    outBenchmarkFileIteration=
  else
    outBenchmarkFileIteration=$outDir/outbench
  fi

  echo
  echo "**************************************************************" | tee -a "$outLogFile"
  echo "Beginning analysis for cross-validation fold ${iteration}" | tee -a "$outLogFile"
  echo "**************************************************************" | tee -a "$outLogFile"
  scripts/featureselection "$dataFiles" "$description" "$numFolds" "$debug" "$fsAlgos" "$outFeaturesFileIteration" "" "$outBenchmarkFileIteration" crossvalidation $iteration 2>&1 | tee -a "$outLogFile"
done

echo
echo "**************************************************************" | tee -a "$outLogFile"
echo "Finalizing analysis" | tee -a "$outLogFile"
echo "**************************************************************" | tee -a "$outLogFile"
echo

echo "Combining results across cross-validation iterations..." | tee -a "$outLogFile"
python scripts/CombineCrossValidationIterations.py "$tmpDir/*/outfeatures,$tmpDir/*/outbench" "$tmpDir/outfeatures,$tmpDir/outbenchmark" 2>&1 | tee -a "$outLogFile"

source scripts/shared_functions
sortCriteria="-k1,1 -k2,2n -k3,3n -k4"
sortFile $tmpDir/outfeatures "$sortCriteria" "$outFeaturesFile"
sortFile $tmpDir/outbenchmark "$sortCriteria" "$outBenchmarkFile"

echo "Summarizing feature ranks..."
errFile=/dev/null
if [[ "$debug" == "true" ]]
then
  errFile=$(mktemp $tmpDir/XXXXXXXXX)
fi
Rscript --vanilla scripts/BordaCountFeatures.R $outFeaturesFile $outSummarizedFeaturesFile 2> $errFile | tee -a "$outLogFile"
printError $debug $errFile

cleanup_cv

source scripts/success_message
