#!/bin/bash

set -euo pipefail

source scripts/shared_functions
source scripts/first_param_check

dataFiles="$(python scripts/ParseArgs.py --data TRUE "$@")"
description="$(python scripts/ParseArgs.py --description TRUE $@)"
numIterations="$(python scripts/ParseArgs.py --iterations TRUE $@)"
outerNumFolds="$(python scripts/ParseArgs.py --outer-folds TRUE $@)"
innerNumFolds="$(python scripts/ParseArgs.py --inner-folds TRUE $@)"
classifAlgos="$(python scripts/ParseArgs.py --classif-algo TRUE "$@")"
numFeaturesOptions="$(python scripts/ParseArgs.py --num-features TRUE "$@")"
fsAlgos="$(python scripts/ParseArgs.py --fs-algo TRUE "$@")"
outputDir="$(python scripts/ParseArgs.py --output-dir TRUE $@)"
verbose="$(python scripts/ParseArgs.py --verbose FALSE false $@)"
ohe="$(python scripts/ParseArgs.py --ohe FALSE true $@)"
tmpDir="$(python scripts/ParseArgs.py --temp-dir FALSE '' $@)"

checkParamParseOutput "$dataFiles"
checkParamParseOutput "$description"
checkParamParseOutput "$numIterations"
checkParamParseOutput "$outerNumFolds"
checkParamParseOutput "$innerNumFolds"
checkParamParseOutput "$classifAlgos"
checkParamParseOutput "$numFeaturesOptions"
checkParamParseOutput "$fsAlgos"
checkParamParseOutput "$outputDir"
checkParamParseOutput "$verbose"
checkParamParseOutput "$ohe"
checkParamParseOutput "$tmpDir"

mkdir -p $outputDir
outSelectedFeaturesFile="$outputDir/SelectedFeatures.tsv"
outPredictionsFile="$outputDir/Predictions.tsv"
outMetricsFile="$outputDir/Metrics.tsv"
outNestedSelectedFeaturesFile="$outputDir/Nested_SelectedFeatures.tsv"
outNestedSummarizedSelectedFeaturesFile="$outputDir/Nested_SelectedFeatures_Summarized.tsv"
outNestedPredictionsFile="$outputDir/Nested_Predictions.tsv"
outNestedMetricsFile="$outputDir/Nested_Metrics.tsv"
outNestedFeatureSelectionBenchmarkFile="$outputDir/Nested_FeatureSelection_ElapsedTime.tsv"
outNestedClassificationBenchmarkFile="$outputDir/Nested_Classification_ElapsedTime.tsv"
outNestedBestFile="$outputDir/Nested_Best.tsv"
outLogFile="$outputDir/Log.txt"

source scripts/print_args

function cleanup {
  rm -rf $tmpDir
}

cleanup
tmpDir="$(getTempDir "$tmpDir")"

trap cleanup INT TERM EXIT

validationType=crossvalidation
source scripts/setup

echo "Parsing data..."
analysisDataFile=$tmpDir/data.gz
java -Xmx${mem} -jar shinylearner.jar RAW_DATA_FILES="$dataFiles" ANALYSIS_DATA_FILE="$analysisDataFile" DEBUG=$verbose TEMP_DIR=$tmpDir 2> /dev/null

if [[ "$ohe" == "true" ]]
then
  echo "One-hot encoding categorical data (where applicable)..."
  python scripts/OneHotEncode.py "$analysisDataFile"
fi

for iteration in $(seq 1 $numIterations)
do
  outDir=$tmpDir/$iteration
  mkdir -p $outDir

  if [[ "$outSelectedFeaturesFile" == "" ]]
  then
    outSelectedFeaturesFileIteration=
  else
    outSelectedFeaturesFileIteration=$outDir/outfs
  fi
  if [[ "$outPredictionsFile" == "" ]]
  then
    outPredictionsFileIteration=
  else
    outPredictionsFileIteration=$outDir/outpreds
  fi
  if [[ "$outMetricsFile" == "" ]]
  then
    outMetricsFileIteration=
  else
    outMetricsFileIteration=$outDir/outmetrics
  fi
  if [[ "$outNestedSelectedFeaturesFile" == "" ]]
  then
    outNestedSelectedFeaturesFileIteration=
  else
    outNestedSelectedFeaturesFileIteration=$outDir/outfsnested
  fi
  if [[ "$outNestedPredictionsFile" == "" ]]
  then
    outNestedPredictionsFileIteration=
  else
    outNestedPredictionsFileIteration=$outDir/outpredsnested
  fi
  if [[ "$outNestedMetricsFile" == "" ]]
  then
    outNestedMetricsFileIteration=
  else
    outNestedMetricsFileIteration=$outDir/outmetricsnested
  fi
  if [[ "$outNestedFeatureSelectionBenchmarkFile" == "" ]]
  then
    outNestedFeatureSelectionBenchmarkFileIteration=
  else
    outNestedFeatureSelectionBenchmarkFileIteration=$outDir/outbenchfsnested
  fi
  if [[ "$outNestedClassificationBenchmarkFile" == "" ]]
  then
    outNestedClassificationBenchmarkFileIteration=
  else
    outNestedClassificationBenchmarkFileIteration=$outDir/outbenchclnested
  fi

  outNestedBestFileIteration=$outDir/outnestedbest

  echo
  echo "**************************************************************" | tee -a "$outLogFile"
  echo "Beginning analysis for cross-validation fold ${iteration}" | tee -a "$outLogFile"
  echo "**************************************************************" | tee -a "$outLogFile"
  scripts/nestedboth "$analysisDataFile" "$description" "$outerNumFolds" "$innerNumFolds" "$verbose" "$fsAlgos" "$numFeaturesOptions" "$classifAlgos" "$outSelectedFeaturesFileIteration" "$outPredictionsFileIteration" "$outMetricsFileIteration" "$outNestedSelectedFeaturesFileIteration" "" "$outNestedPredictionsFileIteration" "$outNestedMetricsFileIteration" "$outNestedFeatureSelectionBenchmarkFileIteration" "$outNestedClassificationBenchmarkFileIteration" "$outNestedBestFileIteration" crossvalidation $iteration NA $ohe $outDir 2>&1 | tee -a "$outLogFile"
done

echo
echo "**************************************************************" | tee -a "$outLogFile"
echo "Finalizing analysis" | tee -a "$outLogFile"
echo "**************************************************************" | tee -a "$outLogFile"
echo

echo "Combining results across cross-validation iterations..." | tee -a "$outLogFile"
python scripts/CombineCrossValidationIterations.py "$tmpDir/*/outfs,$tmpDir/*/outpreds,$tmpDir/*/outmetrics,$tmpDir/*/outfsnested,$tmpDir/*/outpredsnested,$tmpDir/*/outmetricsnested,$tmpDir/*/outbenchfsnested,$tmpDir/*/outbenchclnested,$tmpDir/*/outnestedbest" "$tmpDir/outfs,$tmpDir/outpreds,$tmpDir/outmetrics,$tmpDir/outfsnested,$tmpDir/outpredsnested,$tmpDir/outmetricsnested,$tmpDir/outbenchfsnested,$tmpDir/outbenchclnested,$tmpDir/outnestedbest" 2>&1 | tee -a "$outLogFile"

sortFile $tmpDir/outfs "-k1,1 -k2,2n -k3,3n -k4" "$outSelectedFeaturesFile"
sortFile $tmpDir/outpreds "-k1,1 -k2,2n -k3,3n -k4" "$outPredictionsFile"
sortFile $tmpDir/outmetrics "-k1,1 -k2,2n -k3,3n -k4" "$outMetricsFile"
sortFile $tmpDir/outfsnested "-k1,1 -k2,2n -k3,3n -k4,4n -k5" "$outNestedSelectedFeaturesFile"
sortFile $tmpDir/outpredsnested "-k1,1 -k2,2n -k3,3n -k4,4n -k5" "$outNestedPredictionsFile"
sortFile $tmpDir/outmetricsnested "-k1,1 -k2,2n -k3,3n -k4,4n -k5 -k6,6n -k7" "$outNestedMetricsFile"
sortFile $tmpDir/outbenchfsnested "-k1,1 -k2,2n -k3,3n -k4,4n -k5" "$outNestedFeatureSelectionBenchmarkFile"
sortFile $tmpDir/outbenchclnested "-k1,1 -k2,2n -k3,3n -k4,4n -k5,4n -k5 -k6,6n -k7" "$outNestedClassificationBenchmarkFile"
sortFile $tmpDir/outnestedbest "-k1,1 -k2,2n -k3,3n -k4,4n -k5,4n -k5 -k6,6n -k7" "$outNestedBestFile"

echo "Summarizing feature ranks..."
errFile=/dev/null
if [[ "$verbose" == "true" ]]
then
  errFile=$(mktemp $tmpDir/XXXXXXXXX)
fi
Rscript --vanilla scripts/BordaCountFeatures.R "$outNestedSelectedFeaturesFile" "$outNestedSummarizedSelectedFeaturesFile" 2> $errFile | tee -a "$outLogFile"
printError $verbose $errFile

cleanup

source scripts/success_message
